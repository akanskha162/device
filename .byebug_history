c
render pdf: "report", template: "posts/report.pdf.erb",
@posts = Post.all
c
@profile = current_member.profile
 current_member.profile.blank?
 @profile = @current_member.build_profile
params
c
current_member.profile.image.url
current_member.profile.image.count
current_member.profile.image
current_member.profile
current_member
  @profile.update(params[:profile].permit!)
params
 @profile = current_member.profile
c
 @profile
params[:profile].permit!
params
c
profile.image
profile.city
profile
c
profile
c
remotipart_submitted?
params
c
current_member.profile
 @profile = current_member.profile.update(params[:profile].permit!)
c
current_member
c
profile.city
profile
c
@info.image.url
@info.image
@info
c
@info.image.url
@info.image.photo
@info.image
@info
c
@profile
c
 @profile
 @profile.save
 @profile = current_member.profile.update(params[:profile].permit!)
c
params[:profile][:image]
params[:profile][:image].all
params[:profile][:image].count
params[:profile][:image]
params[:profile][:image].count
params
c
params[:profile][:city]
params[:profile][:image].count
params[:profile][:image]
params
exit
params[:profile][:image].count
params[:profile][:image]
params[:image]
params
exit
params[:image]
params
c
params[:image]
params
exit
params[:image]
params
c
cktext_area :content, rows: 10
f.cktext_area :content, rows: 10
c
post_name.text
post_name
params
c
Post.where("text LIKE ?", "%#{params[:val]}%")
params
c
 Post.where("text LIKE ?", "%#{params[:val]}%")
Post.where("text LIKE ?", "%#{params[:val]}%").present?
params
c
Post.where("text LIKE ?", "#{params[:val]}%").present?
params
c
 flash[:notice] = "there is no such posts"
Post.where("text LIKE ?", "#{params[:val]}%").present?
params
exit
Post.where("text LIKE ?", "#{params[:val]}%").present?
Post.params[:val].present?
params
c
params[:val].present?
exit
 Post.where("text LIKE ?", "#{params[:val]}%")
params[:val].present?
params
exit
PDF::Writer.new
exit
@posts
c
@posts
exit
@posts
exit
params
exit
params
exit
Post.where("text LIKE ?", "%#{params[:val]}")
Post.where("text LIKE ?", "%#{params[:val]}%")
Post.where("text LIKE ?", "#%{params[:val]}%")
Post.where("text LIKE ?", "#%{params[:val]}")
Post.where("text LIKE ?", "#{params[:val]}%")
Post.where(text LIKE '%'params[:val]'%')
params[:val]
params
exit
Post.search(where"text LIKE ?","%#{params[:val]}%")
Post.search(where "text LIKE ?", "%#{params[:val]}%")
params[:search].present?
params[:val]
params
c
params
c
params
c
params
c
params
c
EXPRESS_GATEWAY.purchase
EXPRESS_GATEWAY.purchase(11000, express_purchase_options)
EXPRESS_GATEWAY
c
@order.purchase 
 @order.save
  @order = Order.new(express_token:params[:token],express_payer_id: params[:PayerID])
c
@order.purchase 
 @order.save
    @order = Order.new(express_token:params[:token],express_payer_id: params[:PayerID])
 Order.new(express_token:params[:token],express_payer_id: params[:PayerID])
params
c
 response = EXPRESS_GATEWAY.purchase(110000, express_purchase_options)
 response = EXPRESS_GATEWAY.purchase(50000, express_purchase_options)
response
c
response.success?
  response = EXPRESS_GATEWAY.purchase(11000, express_purchase_options)
@order
c
order
order=Order.new(express_token:params[:token],express_payer_id: params[:PayerID])
params[:PayerID]
params[:PayerId]
params[:payerId]
params[:payer_id]
params
order
oder
order=Order.new(express_token:params[:token],express_payer_id: params[:PayerId])
Order.new(express_token:params[:token],express_payer_id: params[:PayerId])
Order.new
Order.new\
order_params
@cart
params
c
Cart.build_order(order_params)
Cart
cart
@cart
@cart.build_order(params[:PayerID])
params
 @cart.build_order(order_params)
c
EXPRESS_GATEWAY.setup_purchase(1,err)
EXPRESS_GATEWAY.setup_purchase(1)
EXPRESS_GATEWAY.setup_purchase
token
response.token
response
EXPRESS_GATEWAY.redirect_url_for(response.token)
 request.remote_ip
ip: request.remote_ip
EXPRESS_GATEWAY
params
c
 @order = @cart.build_order(order_params)
c
 @order
 Order.new(:express_token => params[:token])
Order
params
exit
params
response.token
response
c
User.new
User
User.search(params)
User
 User.search(params)
(params[:search]).present?
(params[:search]).present
params[:search]).present
params
c
params
c
@posts = Post.all.order('created_at DESC')
 @posts = Post.search(params[:search]).order("created_at DESC")
 params[:search]
c
params[:search]
params
c
Post.search(params[:search])
c
 @posts = Post.search(params[:search])
c
EXPRESS_GATEWAY.redirect_url_for(response.token)
response = EXPRESS_GATEWAY.setup_purchase(1000,      ip: request.remote_ip,      return_url: new_url,      cancel_return_url: posts_url ,      currency: "USD",      allow_guest_checkout: true,      items: [{name: "Order", description: "Order description", quantity: "1", amount: 1000}]    )     
c
params
 @order
c
 @order = Order.new(:express_token => params[:token])
c
@cart
 @order = @cart.build_order(params[:token])
params[:token]
params
 @order = @cart.build_order()
 @order = @cart.build_order
 @order = @cart.build_order(order_params)
  @order = @cart.build_order(params)
exit
